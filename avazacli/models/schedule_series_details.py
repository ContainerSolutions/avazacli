# coding: utf-8

"""
    Avaza API Documentation

    Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ScheduleSeriesDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'schedule_series_id': 'int',
        'account_idfk': 'int',
        'user_idfk': 'int',
        'firstname': 'str',
        'lastname': 'str',
        'project_idfk': 'int',
        'project_title': 'str',
        'company_idfk': 'int',
        'company_name': 'str',
        'time_sheet_category_idfk': 'int',
        'time_sheet_category_name': 'str',
        'leave_type_idfk': 'int',
        'leave_type_name': 'str',
        'start_date': 'datetime',
        'end_date': 'datetime',
        'hours_per_day': 'float',
        'total_duration': 'float',
        'schedule_on_days_off': 'bool',
        'notes': 'str',
        'task_idfk': 'int',
        'task_title': 'str',
        'date_created': 'datetime',
        'date_updated': 'datetime',
        'updated_by_user_idfk': 'int'
    }

    attribute_map = {
        'schedule_series_id': 'ScheduleSeriesID',
        'account_idfk': 'AccountIDFK',
        'user_idfk': 'UserIDFK',
        'firstname': 'Firstname',
        'lastname': 'Lastname',
        'project_idfk': 'ProjectIDFK',
        'project_title': 'ProjectTitle',
        'company_idfk': 'CompanyIDFK',
        'company_name': 'CompanyName',
        'time_sheet_category_idfk': 'TimeSheetCategoryIDFK',
        'time_sheet_category_name': 'TimeSheetCategoryName',
        'leave_type_idfk': 'LeaveTypeIDFK',
        'leave_type_name': 'LeaveTypeName',
        'start_date': 'StartDate',
        'end_date': 'EndDate',
        'hours_per_day': 'HoursPerDay',
        'total_duration': 'TotalDuration',
        'schedule_on_days_off': 'ScheduleOnDaysOff',
        'notes': 'Notes',
        'task_idfk': 'TaskIDFK',
        'task_title': 'TaskTitle',
        'date_created': 'DateCreated',
        'date_updated': 'DateUpdated',
        'updated_by_user_idfk': 'UpdatedByUserIDFK'
    }

    def __init__(self, schedule_series_id=None, account_idfk=None, user_idfk=None, firstname=None, lastname=None, project_idfk=None, project_title=None, company_idfk=None, company_name=None, time_sheet_category_idfk=None, time_sheet_category_name=None, leave_type_idfk=None, leave_type_name=None, start_date=None, end_date=None, hours_per_day=None, total_duration=None, schedule_on_days_off=None, notes=None, task_idfk=None, task_title=None, date_created=None, date_updated=None, updated_by_user_idfk=None):  # noqa: E501
        """ScheduleSeriesDetails - a model defined in Swagger"""  # noqa: E501

        self._schedule_series_id = None
        self._account_idfk = None
        self._user_idfk = None
        self._firstname = None
        self._lastname = None
        self._project_idfk = None
        self._project_title = None
        self._company_idfk = None
        self._company_name = None
        self._time_sheet_category_idfk = None
        self._time_sheet_category_name = None
        self._leave_type_idfk = None
        self._leave_type_name = None
        self._start_date = None
        self._end_date = None
        self._hours_per_day = None
        self._total_duration = None
        self._schedule_on_days_off = None
        self._notes = None
        self._task_idfk = None
        self._task_title = None
        self._date_created = None
        self._date_updated = None
        self._updated_by_user_idfk = None
        self.discriminator = None

        if schedule_series_id is not None:
            self.schedule_series_id = schedule_series_id
        if account_idfk is not None:
            self.account_idfk = account_idfk
        if user_idfk is not None:
            self.user_idfk = user_idfk
        if firstname is not None:
            self.firstname = firstname
        if lastname is not None:
            self.lastname = lastname
        if project_idfk is not None:
            self.project_idfk = project_idfk
        if project_title is not None:
            self.project_title = project_title
        if company_idfk is not None:
            self.company_idfk = company_idfk
        if company_name is not None:
            self.company_name = company_name
        if time_sheet_category_idfk is not None:
            self.time_sheet_category_idfk = time_sheet_category_idfk
        if time_sheet_category_name is not None:
            self.time_sheet_category_name = time_sheet_category_name
        if leave_type_idfk is not None:
            self.leave_type_idfk = leave_type_idfk
        if leave_type_name is not None:
            self.leave_type_name = leave_type_name
        if start_date is not None:
            self.start_date = start_date
        if end_date is not None:
            self.end_date = end_date
        if hours_per_day is not None:
            self.hours_per_day = hours_per_day
        if total_duration is not None:
            self.total_duration = total_duration
        if schedule_on_days_off is not None:
            self.schedule_on_days_off = schedule_on_days_off
        if notes is not None:
            self.notes = notes
        if task_idfk is not None:
            self.task_idfk = task_idfk
        if task_title is not None:
            self.task_title = task_title
        if date_created is not None:
            self.date_created = date_created
        if date_updated is not None:
            self.date_updated = date_updated
        if updated_by_user_idfk is not None:
            self.updated_by_user_idfk = updated_by_user_idfk

    @property
    def schedule_series_id(self):
        """Gets the schedule_series_id of this ScheduleSeriesDetails.  # noqa: E501


        :return: The schedule_series_id of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._schedule_series_id

    @schedule_series_id.setter
    def schedule_series_id(self, schedule_series_id):
        """Sets the schedule_series_id of this ScheduleSeriesDetails.


        :param schedule_series_id: The schedule_series_id of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._schedule_series_id = schedule_series_id

    @property
    def account_idfk(self):
        """Gets the account_idfk of this ScheduleSeriesDetails.  # noqa: E501


        :return: The account_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._account_idfk

    @account_idfk.setter
    def account_idfk(self, account_idfk):
        """Sets the account_idfk of this ScheduleSeriesDetails.


        :param account_idfk: The account_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._account_idfk = account_idfk

    @property
    def user_idfk(self):
        """Gets the user_idfk of this ScheduleSeriesDetails.  # noqa: E501


        :return: The user_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._user_idfk

    @user_idfk.setter
    def user_idfk(self, user_idfk):
        """Sets the user_idfk of this ScheduleSeriesDetails.


        :param user_idfk: The user_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._user_idfk = user_idfk

    @property
    def firstname(self):
        """Gets the firstname of this ScheduleSeriesDetails.  # noqa: E501


        :return: The firstname of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: str
        """
        return self._firstname

    @firstname.setter
    def firstname(self, firstname):
        """Sets the firstname of this ScheduleSeriesDetails.


        :param firstname: The firstname of this ScheduleSeriesDetails.  # noqa: E501
        :type: str
        """

        self._firstname = firstname

    @property
    def lastname(self):
        """Gets the lastname of this ScheduleSeriesDetails.  # noqa: E501


        :return: The lastname of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: str
        """
        return self._lastname

    @lastname.setter
    def lastname(self, lastname):
        """Sets the lastname of this ScheduleSeriesDetails.


        :param lastname: The lastname of this ScheduleSeriesDetails.  # noqa: E501
        :type: str
        """

        self._lastname = lastname

    @property
    def project_idfk(self):
        """Gets the project_idfk of this ScheduleSeriesDetails.  # noqa: E501


        :return: The project_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._project_idfk

    @project_idfk.setter
    def project_idfk(self, project_idfk):
        """Sets the project_idfk of this ScheduleSeriesDetails.


        :param project_idfk: The project_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._project_idfk = project_idfk

    @property
    def project_title(self):
        """Gets the project_title of this ScheduleSeriesDetails.  # noqa: E501


        :return: The project_title of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: str
        """
        return self._project_title

    @project_title.setter
    def project_title(self, project_title):
        """Sets the project_title of this ScheduleSeriesDetails.


        :param project_title: The project_title of this ScheduleSeriesDetails.  # noqa: E501
        :type: str
        """

        self._project_title = project_title

    @property
    def company_idfk(self):
        """Gets the company_idfk of this ScheduleSeriesDetails.  # noqa: E501


        :return: The company_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._company_idfk

    @company_idfk.setter
    def company_idfk(self, company_idfk):
        """Sets the company_idfk of this ScheduleSeriesDetails.


        :param company_idfk: The company_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._company_idfk = company_idfk

    @property
    def company_name(self):
        """Gets the company_name of this ScheduleSeriesDetails.  # noqa: E501


        :return: The company_name of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this ScheduleSeriesDetails.


        :param company_name: The company_name of this ScheduleSeriesDetails.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def time_sheet_category_idfk(self):
        """Gets the time_sheet_category_idfk of this ScheduleSeriesDetails.  # noqa: E501


        :return: The time_sheet_category_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._time_sheet_category_idfk

    @time_sheet_category_idfk.setter
    def time_sheet_category_idfk(self, time_sheet_category_idfk):
        """Sets the time_sheet_category_idfk of this ScheduleSeriesDetails.


        :param time_sheet_category_idfk: The time_sheet_category_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._time_sheet_category_idfk = time_sheet_category_idfk

    @property
    def time_sheet_category_name(self):
        """Gets the time_sheet_category_name of this ScheduleSeriesDetails.  # noqa: E501


        :return: The time_sheet_category_name of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: str
        """
        return self._time_sheet_category_name

    @time_sheet_category_name.setter
    def time_sheet_category_name(self, time_sheet_category_name):
        """Sets the time_sheet_category_name of this ScheduleSeriesDetails.


        :param time_sheet_category_name: The time_sheet_category_name of this ScheduleSeriesDetails.  # noqa: E501
        :type: str
        """

        self._time_sheet_category_name = time_sheet_category_name

    @property
    def leave_type_idfk(self):
        """Gets the leave_type_idfk of this ScheduleSeriesDetails.  # noqa: E501


        :return: The leave_type_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._leave_type_idfk

    @leave_type_idfk.setter
    def leave_type_idfk(self, leave_type_idfk):
        """Sets the leave_type_idfk of this ScheduleSeriesDetails.


        :param leave_type_idfk: The leave_type_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._leave_type_idfk = leave_type_idfk

    @property
    def leave_type_name(self):
        """Gets the leave_type_name of this ScheduleSeriesDetails.  # noqa: E501


        :return: The leave_type_name of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: str
        """
        return self._leave_type_name

    @leave_type_name.setter
    def leave_type_name(self, leave_type_name):
        """Sets the leave_type_name of this ScheduleSeriesDetails.


        :param leave_type_name: The leave_type_name of this ScheduleSeriesDetails.  # noqa: E501
        :type: str
        """

        self._leave_type_name = leave_type_name

    @property
    def start_date(self):
        """Gets the start_date of this ScheduleSeriesDetails.  # noqa: E501


        :return: The start_date of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this ScheduleSeriesDetails.


        :param start_date: The start_date of this ScheduleSeriesDetails.  # noqa: E501
        :type: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this ScheduleSeriesDetails.  # noqa: E501


        :return: The end_date of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this ScheduleSeriesDetails.


        :param end_date: The end_date of this ScheduleSeriesDetails.  # noqa: E501
        :type: datetime
        """

        self._end_date = end_date

    @property
    def hours_per_day(self):
        """Gets the hours_per_day of this ScheduleSeriesDetails.  # noqa: E501


        :return: The hours_per_day of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: float
        """
        return self._hours_per_day

    @hours_per_day.setter
    def hours_per_day(self, hours_per_day):
        """Sets the hours_per_day of this ScheduleSeriesDetails.


        :param hours_per_day: The hours_per_day of this ScheduleSeriesDetails.  # noqa: E501
        :type: float
        """

        self._hours_per_day = hours_per_day

    @property
    def total_duration(self):
        """Gets the total_duration of this ScheduleSeriesDetails.  # noqa: E501


        :return: The total_duration of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: float
        """
        return self._total_duration

    @total_duration.setter
    def total_duration(self, total_duration):
        """Sets the total_duration of this ScheduleSeriesDetails.


        :param total_duration: The total_duration of this ScheduleSeriesDetails.  # noqa: E501
        :type: float
        """

        self._total_duration = total_duration

    @property
    def schedule_on_days_off(self):
        """Gets the schedule_on_days_off of this ScheduleSeriesDetails.  # noqa: E501


        :return: The schedule_on_days_off of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: bool
        """
        return self._schedule_on_days_off

    @schedule_on_days_off.setter
    def schedule_on_days_off(self, schedule_on_days_off):
        """Sets the schedule_on_days_off of this ScheduleSeriesDetails.


        :param schedule_on_days_off: The schedule_on_days_off of this ScheduleSeriesDetails.  # noqa: E501
        :type: bool
        """

        self._schedule_on_days_off = schedule_on_days_off

    @property
    def notes(self):
        """Gets the notes of this ScheduleSeriesDetails.  # noqa: E501


        :return: The notes of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ScheduleSeriesDetails.


        :param notes: The notes of this ScheduleSeriesDetails.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def task_idfk(self):
        """Gets the task_idfk of this ScheduleSeriesDetails.  # noqa: E501


        :return: The task_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._task_idfk

    @task_idfk.setter
    def task_idfk(self, task_idfk):
        """Sets the task_idfk of this ScheduleSeriesDetails.


        :param task_idfk: The task_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._task_idfk = task_idfk

    @property
    def task_title(self):
        """Gets the task_title of this ScheduleSeriesDetails.  # noqa: E501


        :return: The task_title of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: str
        """
        return self._task_title

    @task_title.setter
    def task_title(self, task_title):
        """Sets the task_title of this ScheduleSeriesDetails.


        :param task_title: The task_title of this ScheduleSeriesDetails.  # noqa: E501
        :type: str
        """

        self._task_title = task_title

    @property
    def date_created(self):
        """Gets the date_created of this ScheduleSeriesDetails.  # noqa: E501


        :return: The date_created of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ScheduleSeriesDetails.


        :param date_created: The date_created of this ScheduleSeriesDetails.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ScheduleSeriesDetails.  # noqa: E501


        :return: The date_updated of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ScheduleSeriesDetails.


        :param date_updated: The date_updated of this ScheduleSeriesDetails.  # noqa: E501
        :type: datetime
        """

        self._date_updated = date_updated

    @property
    def updated_by_user_idfk(self):
        """Gets the updated_by_user_idfk of this ScheduleSeriesDetails.  # noqa: E501


        :return: The updated_by_user_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :rtype: int
        """
        return self._updated_by_user_idfk

    @updated_by_user_idfk.setter
    def updated_by_user_idfk(self, updated_by_user_idfk):
        """Sets the updated_by_user_idfk of this ScheduleSeriesDetails.


        :param updated_by_user_idfk: The updated_by_user_idfk of this ScheduleSeriesDetails.  # noqa: E501
        :type: int
        """

        self._updated_by_user_idfk = updated_by_user_idfk

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ScheduleSeriesDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
