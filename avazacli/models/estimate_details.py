# coding: utf-8

"""
    Avaza API Documentation

    Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from avazacli.models.estimate_line_item_details import EstimateLineItemDetails  # noqa: F401,E501
from avazacli.models.estimate_links import EstimateLinks  # noqa: F401,E501
from avazacli.models.issuer_details import IssuerDetails  # noqa: F401,E501
from avazacli.models.recipient_details import RecipientDetails  # noqa: F401,E501


class EstimateDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'estimate_id': 'int',
        'account_idfk': 'int',
        'estimate_prefix': 'str',
        'estimate_item_number': 'str',
        'company_idfk': 'int',
        'company_name': 'str',
        'subject': 'str',
        'date_issued': 'datetime',
        'date_sent': 'datetime',
        'due_date': 'datetime',
        'estimate_status_code': 'str',
        'tax_amount': 'float',
        'estimate_tax_config_code': 'str',
        'balance': 'float',
        'currency_code': 'str',
        'total_amount': 'float',
        'exchange_rate': 'float',
        'notes': 'str',
        'date_created': 'datetime',
        'date_updated': 'datetime',
        'line_items': 'list[EstimateLineItemDetails]',
        'links': 'EstimateLinks',
        'issuer': 'IssuerDetails',
        'recipient': 'RecipientDetails'
    }

    attribute_map = {
        'estimate_id': 'EstimateID',
        'account_idfk': 'AccountIDFK',
        'estimate_prefix': 'EstimatePrefix',
        'estimate_item_number': 'EstimateItemNumber',
        'company_idfk': 'CompanyIDFK',
        'company_name': 'CompanyName',
        'subject': 'Subject',
        'date_issued': 'DateIssued',
        'date_sent': 'DateSent',
        'due_date': 'DueDate',
        'estimate_status_code': 'EstimateStatusCode',
        'tax_amount': 'TaxAmount',
        'estimate_tax_config_code': 'EstimateTaxConfigCode',
        'balance': 'Balance',
        'currency_code': 'CurrencyCode',
        'total_amount': 'TotalAmount',
        'exchange_rate': 'ExchangeRate',
        'notes': 'Notes',
        'date_created': 'DateCreated',
        'date_updated': 'DateUpdated',
        'line_items': 'LineItems',
        'links': 'Links',
        'issuer': 'Issuer',
        'recipient': 'Recipient'
    }

    def __init__(self, estimate_id=None, account_idfk=None, estimate_prefix=None, estimate_item_number=None, company_idfk=None, company_name=None, subject=None, date_issued=None, date_sent=None, due_date=None, estimate_status_code=None, tax_amount=None, estimate_tax_config_code=None, balance=None, currency_code=None, total_amount=None, exchange_rate=None, notes=None, date_created=None, date_updated=None, line_items=None, links=None, issuer=None, recipient=None):  # noqa: E501
        """EstimateDetails - a model defined in Swagger"""  # noqa: E501

        self._estimate_id = None
        self._account_idfk = None
        self._estimate_prefix = None
        self._estimate_item_number = None
        self._company_idfk = None
        self._company_name = None
        self._subject = None
        self._date_issued = None
        self._date_sent = None
        self._due_date = None
        self._estimate_status_code = None
        self._tax_amount = None
        self._estimate_tax_config_code = None
        self._balance = None
        self._currency_code = None
        self._total_amount = None
        self._exchange_rate = None
        self._notes = None
        self._date_created = None
        self._date_updated = None
        self._line_items = None
        self._links = None
        self._issuer = None
        self._recipient = None
        self.discriminator = None

        if estimate_id is not None:
            self.estimate_id = estimate_id
        if account_idfk is not None:
            self.account_idfk = account_idfk
        if estimate_prefix is not None:
            self.estimate_prefix = estimate_prefix
        if estimate_item_number is not None:
            self.estimate_item_number = estimate_item_number
        if company_idfk is not None:
            self.company_idfk = company_idfk
        if company_name is not None:
            self.company_name = company_name
        if subject is not None:
            self.subject = subject
        if date_issued is not None:
            self.date_issued = date_issued
        if date_sent is not None:
            self.date_sent = date_sent
        if due_date is not None:
            self.due_date = due_date
        if estimate_status_code is not None:
            self.estimate_status_code = estimate_status_code
        if tax_amount is not None:
            self.tax_amount = tax_amount
        if estimate_tax_config_code is not None:
            self.estimate_tax_config_code = estimate_tax_config_code
        if balance is not None:
            self.balance = balance
        if currency_code is not None:
            self.currency_code = currency_code
        if total_amount is not None:
            self.total_amount = total_amount
        if exchange_rate is not None:
            self.exchange_rate = exchange_rate
        if notes is not None:
            self.notes = notes
        if date_created is not None:
            self.date_created = date_created
        if date_updated is not None:
            self.date_updated = date_updated
        if line_items is not None:
            self.line_items = line_items
        if links is not None:
            self.links = links
        if issuer is not None:
            self.issuer = issuer
        if recipient is not None:
            self.recipient = recipient

    @property
    def estimate_id(self):
        """Gets the estimate_id of this EstimateDetails.  # noqa: E501


        :return: The estimate_id of this EstimateDetails.  # noqa: E501
        :rtype: int
        """
        return self._estimate_id

    @estimate_id.setter
    def estimate_id(self, estimate_id):
        """Sets the estimate_id of this EstimateDetails.


        :param estimate_id: The estimate_id of this EstimateDetails.  # noqa: E501
        :type: int
        """

        self._estimate_id = estimate_id

    @property
    def account_idfk(self):
        """Gets the account_idfk of this EstimateDetails.  # noqa: E501


        :return: The account_idfk of this EstimateDetails.  # noqa: E501
        :rtype: int
        """
        return self._account_idfk

    @account_idfk.setter
    def account_idfk(self, account_idfk):
        """Sets the account_idfk of this EstimateDetails.


        :param account_idfk: The account_idfk of this EstimateDetails.  # noqa: E501
        :type: int
        """

        self._account_idfk = account_idfk

    @property
    def estimate_prefix(self):
        """Gets the estimate_prefix of this EstimateDetails.  # noqa: E501


        :return: The estimate_prefix of this EstimateDetails.  # noqa: E501
        :rtype: str
        """
        return self._estimate_prefix

    @estimate_prefix.setter
    def estimate_prefix(self, estimate_prefix):
        """Sets the estimate_prefix of this EstimateDetails.


        :param estimate_prefix: The estimate_prefix of this EstimateDetails.  # noqa: E501
        :type: str
        """

        self._estimate_prefix = estimate_prefix

    @property
    def estimate_item_number(self):
        """Gets the estimate_item_number of this EstimateDetails.  # noqa: E501


        :return: The estimate_item_number of this EstimateDetails.  # noqa: E501
        :rtype: str
        """
        return self._estimate_item_number

    @estimate_item_number.setter
    def estimate_item_number(self, estimate_item_number):
        """Sets the estimate_item_number of this EstimateDetails.


        :param estimate_item_number: The estimate_item_number of this EstimateDetails.  # noqa: E501
        :type: str
        """

        self._estimate_item_number = estimate_item_number

    @property
    def company_idfk(self):
        """Gets the company_idfk of this EstimateDetails.  # noqa: E501


        :return: The company_idfk of this EstimateDetails.  # noqa: E501
        :rtype: int
        """
        return self._company_idfk

    @company_idfk.setter
    def company_idfk(self, company_idfk):
        """Sets the company_idfk of this EstimateDetails.


        :param company_idfk: The company_idfk of this EstimateDetails.  # noqa: E501
        :type: int
        """

        self._company_idfk = company_idfk

    @property
    def company_name(self):
        """Gets the company_name of this EstimateDetails.  # noqa: E501


        :return: The company_name of this EstimateDetails.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this EstimateDetails.


        :param company_name: The company_name of this EstimateDetails.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def subject(self):
        """Gets the subject of this EstimateDetails.  # noqa: E501


        :return: The subject of this EstimateDetails.  # noqa: E501
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this EstimateDetails.


        :param subject: The subject of this EstimateDetails.  # noqa: E501
        :type: str
        """

        self._subject = subject

    @property
    def date_issued(self):
        """Gets the date_issued of this EstimateDetails.  # noqa: E501


        :return: The date_issued of this EstimateDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._date_issued

    @date_issued.setter
    def date_issued(self, date_issued):
        """Sets the date_issued of this EstimateDetails.


        :param date_issued: The date_issued of this EstimateDetails.  # noqa: E501
        :type: datetime
        """

        self._date_issued = date_issued

    @property
    def date_sent(self):
        """Gets the date_sent of this EstimateDetails.  # noqa: E501


        :return: The date_sent of this EstimateDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._date_sent

    @date_sent.setter
    def date_sent(self, date_sent):
        """Sets the date_sent of this EstimateDetails.


        :param date_sent: The date_sent of this EstimateDetails.  # noqa: E501
        :type: datetime
        """

        self._date_sent = date_sent

    @property
    def due_date(self):
        """Gets the due_date of this EstimateDetails.  # noqa: E501


        :return: The due_date of this EstimateDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this EstimateDetails.


        :param due_date: The due_date of this EstimateDetails.  # noqa: E501
        :type: datetime
        """

        self._due_date = due_date

    @property
    def estimate_status_code(self):
        """Gets the estimate_status_code of this EstimateDetails.  # noqa: E501


        :return: The estimate_status_code of this EstimateDetails.  # noqa: E501
        :rtype: str
        """
        return self._estimate_status_code

    @estimate_status_code.setter
    def estimate_status_code(self, estimate_status_code):
        """Sets the estimate_status_code of this EstimateDetails.


        :param estimate_status_code: The estimate_status_code of this EstimateDetails.  # noqa: E501
        :type: str
        """

        self._estimate_status_code = estimate_status_code

    @property
    def tax_amount(self):
        """Gets the tax_amount of this EstimateDetails.  # noqa: E501


        :return: The tax_amount of this EstimateDetails.  # noqa: E501
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this EstimateDetails.


        :param tax_amount: The tax_amount of this EstimateDetails.  # noqa: E501
        :type: float
        """

        self._tax_amount = tax_amount

    @property
    def estimate_tax_config_code(self):
        """Gets the estimate_tax_config_code of this EstimateDetails.  # noqa: E501


        :return: The estimate_tax_config_code of this EstimateDetails.  # noqa: E501
        :rtype: str
        """
        return self._estimate_tax_config_code

    @estimate_tax_config_code.setter
    def estimate_tax_config_code(self, estimate_tax_config_code):
        """Sets the estimate_tax_config_code of this EstimateDetails.


        :param estimate_tax_config_code: The estimate_tax_config_code of this EstimateDetails.  # noqa: E501
        :type: str
        """

        self._estimate_tax_config_code = estimate_tax_config_code

    @property
    def balance(self):
        """Gets the balance of this EstimateDetails.  # noqa: E501


        :return: The balance of this EstimateDetails.  # noqa: E501
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this EstimateDetails.


        :param balance: The balance of this EstimateDetails.  # noqa: E501
        :type: float
        """

        self._balance = balance

    @property
    def currency_code(self):
        """Gets the currency_code of this EstimateDetails.  # noqa: E501


        :return: The currency_code of this EstimateDetails.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this EstimateDetails.


        :param currency_code: The currency_code of this EstimateDetails.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    @property
    def total_amount(self):
        """Gets the total_amount of this EstimateDetails.  # noqa: E501


        :return: The total_amount of this EstimateDetails.  # noqa: E501
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this EstimateDetails.


        :param total_amount: The total_amount of this EstimateDetails.  # noqa: E501
        :type: float
        """

        self._total_amount = total_amount

    @property
    def exchange_rate(self):
        """Gets the exchange_rate of this EstimateDetails.  # noqa: E501


        :return: The exchange_rate of this EstimateDetails.  # noqa: E501
        :rtype: float
        """
        return self._exchange_rate

    @exchange_rate.setter
    def exchange_rate(self, exchange_rate):
        """Sets the exchange_rate of this EstimateDetails.


        :param exchange_rate: The exchange_rate of this EstimateDetails.  # noqa: E501
        :type: float
        """

        self._exchange_rate = exchange_rate

    @property
    def notes(self):
        """Gets the notes of this EstimateDetails.  # noqa: E501


        :return: The notes of this EstimateDetails.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this EstimateDetails.


        :param notes: The notes of this EstimateDetails.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def date_created(self):
        """Gets the date_created of this EstimateDetails.  # noqa: E501


        :return: The date_created of this EstimateDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this EstimateDetails.


        :param date_created: The date_created of this EstimateDetails.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this EstimateDetails.  # noqa: E501


        :return: The date_updated of this EstimateDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this EstimateDetails.


        :param date_updated: The date_updated of this EstimateDetails.  # noqa: E501
        :type: datetime
        """

        self._date_updated = date_updated

    @property
    def line_items(self):
        """Gets the line_items of this EstimateDetails.  # noqa: E501


        :return: The line_items of this EstimateDetails.  # noqa: E501
        :rtype: list[EstimateLineItemDetails]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this EstimateDetails.


        :param line_items: The line_items of this EstimateDetails.  # noqa: E501
        :type: list[EstimateLineItemDetails]
        """

        self._line_items = line_items

    @property
    def links(self):
        """Gets the links of this EstimateDetails.  # noqa: E501


        :return: The links of this EstimateDetails.  # noqa: E501
        :rtype: EstimateLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this EstimateDetails.


        :param links: The links of this EstimateDetails.  # noqa: E501
        :type: EstimateLinks
        """

        self._links = links

    @property
    def issuer(self):
        """Gets the issuer of this EstimateDetails.  # noqa: E501


        :return: The issuer of this EstimateDetails.  # noqa: E501
        :rtype: IssuerDetails
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this EstimateDetails.


        :param issuer: The issuer of this EstimateDetails.  # noqa: E501
        :type: IssuerDetails
        """

        self._issuer = issuer

    @property
    def recipient(self):
        """Gets the recipient of this EstimateDetails.  # noqa: E501


        :return: The recipient of this EstimateDetails.  # noqa: E501
        :rtype: RecipientDetails
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this EstimateDetails.


        :param recipient: The recipient of this EstimateDetails.  # noqa: E501
        :type: RecipientDetails
        """

        self._recipient = recipient

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EstimateDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
